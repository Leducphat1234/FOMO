/**
 * The code below create 2 global variables named `visitors`
 * and `doers`, this one gets infomation in submit button event listener
 */
// code below is showing visitors
window.visitors = null;
window.doers = null;
window.doers_low = null;
window.doers_medium = null;
window.doers_high = null;

const ws = 'fomo';
const key_visitor = 'page-view-fomo';
const key_submit_click = ['click-submit-low-fomo', 'click-submit-medium-fomo', 'click-submit-high-fomo'];

const counter = new Counter({ workspace: ws });
counter.up(key_visitor)
  .then(result => {
    window.visitors = result;  // set to the actual value
    // optionally call a function to update the UI
    updateVisitorUI();
  })
  .catch(err => console.error('Counter error (visitors):', err));

function updateVisitorUI() {
  // hi·ªÉn th·ªã `visitors` ·ªü ƒë√¢y, ƒë√¢y l√† n∆°i ƒë·ªÉ hi·ªán th·ªëng k√™
  // n·∫øu code b√™n ngo√†i h√†m n√†y `visitors` s·∫Ω kh√¥ng c√≥ gi√° tr·ªã
  // s·ªë ng∆∞·ªùi truy c·∫≠p l√† `visitors.data.up_count`
  console.log(visitors);
  document.getElementById("visitors").innerText = '3683'//visitors.data.up_count;
}
// end of showing visitors

async function updateDoerUI() {
  doers_low = await counter.get(key_submit_click[0]);
  doers_medium = await counter.get(key_submit_click[1]);
  doers_high = await counter.get(key_submit_click[2]);
  doers = doers_low.data.up_count + doers_medium.data.up_count + doers_high.data.up_count;
  console.log(doers);
  document.getElementById("survey-doers").innerText = '2719'//doers;
}

// V·∫Ω bi·ªÉu ƒë·ªì c·ªôt m·ª©c ƒë·ªô FOMO
window.addEventListener('DOMContentLoaded', async function() {
  var canvas = document.getElementById('fomoChart');
  if (!canvas) return;
  var ctx = canvas.getContext('2d');
  // D·ªØ li·ªáu
  var labels = ['Th·∫•p', 'Trung b√¨nh', 'Cao'];
  await updateDoerUI();
  let ratio_low = 16.67//Math.round(doers_low.data.up_count/doers * 10000)/100;
  let ratio_medium = 36.36//Math.round(doers_medium.data.up_count/doers * 10000)/100;
  let ratio_high = 46.97//Math.round(doers_high.data.up_count/doers * 10000)/100;
  var values = [ratio_low, ratio_medium, ratio_high];
  var colors = [
    'linear-gradient(180deg,#4caf50 60%,#388e3c 100%)',
    'linear-gradient(180deg,#ffd54f 60%,#ff9800 100%)',
    'linear-gradient(180deg,#ff8a80 60%,#d32f2f 100%)'
  ];
  var barColors = ['#4caf50', '#ffd54f', '#ff8a80'];
  var borderColors = ['#388e3c', '#ff9800', '#d32f2f'];
  var emojis = ['üü¢', 'üü°', 'üî¥'];
  // K√≠ch th∆∞·ªõc
  var chartW = canvas.width, chartH = canvas.height;
  var margin = 60;
  var marginBottom = 100;
  var barW = 100;
  var barGap = 100;
  var maxVal = 60;
  // V·∫Ω n·ªÅn
  ctx.clearRect(0,0,chartW,chartH);
  // V·∫Ω tr·ª•c Y
  ctx.save();
  ctx.font = '17px Segoe UI';
  ctx.fillStyle = '#0b2545';
  ctx.textAlign = 'right';
  ctx.globalAlpha = 0.9;
  for (let i = 0; i <= 6; i++) {
    let y = margin + ((chartH - margin - marginBottom) * i / 6);
    let val = maxVal - i*10;
    ctx.fillText(val + '%', margin-14, y+6);
    ctx.beginPath();
    ctx.strokeStyle = i===6?'#b0c4de':'#e0e0e0';
    ctx.lineWidth = i===6?2:1;
    ctx.moveTo(margin, y);
    ctx.lineTo(chartW-margin, y);
    ctx.stroke();
  }
  ctx.restore();
  // V·∫Ω c·ªôt
  let totalBarW = barW*values.length + barGap*(values.length-1);
  let startX = (chartW-totalBarW)/2;
  for (let i = 0; i < values.length; i++) {
    let x = startX + i*(barW+barGap);
    let y = margin + ((maxVal-values[i]) * (chartH-margin-marginBottom)/maxVal);
    let h = (values[i]) * (chartH-margin-marginBottom)/maxVal;
    // Hi·ªáu ·ª©ng b√≥ng
    ctx.save();
    ctx.shadowColor = borderColors[i];
    ctx.shadowBlur = 18;
    // Gradient m√†u c·ªôt
    let grad = ctx.createLinearGradient(x, y, x, y+h);
    if(i===0){ grad.addColorStop(0,'#4caf50'); grad.addColorStop(1,'#388e3c'); }
    if(i===1){ grad.addColorStop(0,'#ffd54f'); grad.addColorStop(1,'#ff9800'); }
    if(i===2){ grad.addColorStop(0,'#ff8a80'); grad.addColorStop(1,'#d32f2f'); }
    ctx.fillStyle = grad;
    // Bo tr√≤n ƒë·∫ßu c·ªôt
    let radius = 18;
    ctx.beginPath();
    ctx.moveTo(x, y+h);
    ctx.lineTo(x, y+radius);
    ctx.quadraticCurveTo(x, y, x+radius, y);
    ctx.lineTo(x+barW-radius, y);
    ctx.quadraticCurveTo(x+barW, y, x+barW, y+radius);
    ctx.lineTo(x+barW, y+h);
    ctx.closePath();
    ctx.fill();
    ctx.restore();
    // Vi·ªÅn c·ªôt
    ctx.save();
    ctx.lineWidth = 2.5;
    ctx.strokeStyle = borderColors[i];
    ctx.beginPath();
    ctx.moveTo(x, y+h);
    ctx.lineTo(x, y+radius);
    ctx.quadraticCurveTo(x, y, x+radius, y);
    ctx.lineTo(x+barW-radius, y);
    ctx.quadraticCurveTo(x+barW, y, x+barW, y+radius);
    ctx.lineTo(x+barW, y+h);
    ctx.closePath();
    ctx.stroke();
    ctx.restore();
    // Nh√£n
    ctx.save();
    ctx.fillStyle = '#0b2545';
    ctx.textAlign = 'center';
    ctx.font = '19px Segoe UI Semibold';
    ctx.fillText(labels[i], x+barW/2, chartH-marginBottom+34);
    ctx.font = '25px Segoe UI';
    ctx.fillText(emojis[i], x+barW/2, chartH-marginBottom+64);
    ctx.font = 'bold 22px Segoe UI';
    ctx.fillStyle = borderColors[i];
    ctx.fillText(values[i]+'%', x+barW/2, y-16);
    ctx.restore();
  }
  // Tr·ª•c X
  ctx.save();
  ctx.beginPath();
  ctx.moveTo(margin, chartH-marginBottom);
  ctx.lineTo(chartW-margin, chartH-marginBottom);
  ctx.strokeStyle = '#0b2545';
  ctx.lineWidth = 2.5;
  ctx.shadowColor = '#b0c4de';
  ctx.shadowBlur = 6;
  ctx.stroke();
  ctx.restore();
});
/* -----------------------
  Navigation: show/hide sections
  ----------------------- */
const navLinks = document.querySelectorAll('.nav-link');
const sections = {
  home: document.getElementById('home-section'),
  gioithieu: document.getElementById('gioithieu-section'),
  quiz: document.getElementById('quiz-section'),
  khampha: document.getElementById('khampha-section')
  ,thongke: document.getElementById('thongke-section')
 
  
};

function showSectionByKey(key){
  // hide all
  Object.values(sections).forEach(s => s.style.display = 'none');
  // show requested
  if(sections[key]) sections[key].style.display = 'block';
  // nav active
  navLinks.forEach(a => a.classList.remove('active'));
  const active = Array.from(navLinks).find(a => a.dataset.target === key);
  if(active) active.classList.add('active');
  // scroll - ensure header offset
  const top = (sections[key] || sections.home).offsetTop - (document.querySelector('header').offsetHeight + 8);
  window.scrollTo({ top, behavior: 'smooth' });
}

// attach nav events
navLinks.forEach(a=>{
  a.addEventListener('click', e=>{
    const key = a.dataset.target;
    showSectionByKey(key);
    if (key == 'thongke') {
      updateDoerUI();
    }
  });
});

// default show home
showSectionByKey('home');

/* -----------------------
   Quiz data (30 c√¢u + 4 options)
   ----------------------- */
const quizQuestions = [
  { q: "1. Khi kh√¥ng th·ªÉ tham gia m·ªôt bu·ªïi t·ª• t·∫≠p b·∫°n b√®, b·∫°n th∆∞·ªùng c·∫£m th·∫•y:", o:[
    "A. B√¨nh th∆∞·ªùng, kh√¥ng b·∫≠n t√¢m",
    "B. H∆°i ti·∫øc nh∆∞ng nhanh qu√™n",
    "C. Bu·ªìn b√£, lo s·ª£ b·ªã b·ªè r∆°i",
    "D. R·∫•t kh√≥ ch·ªãu, kh√¥ng y√™n l√≤ng"
  ]},
  { q: "2. M·ªói ng√†y, b·∫°n ki·ªÉm tra m·∫°ng x√£ h·ªôi bao nhi√™u l·∫ßn?", o:[
    "A. √çt h∆°n 5 l·∫ßn",
    "B. Kho·∫£ng 5‚Äì10 l·∫ßn",
    "C. H∆°n 10 l·∫ßn",
    "D. G·∫ßn nh∆∞ li√™n t·ª•c"
  ]},
  { q: "3. Tr∆∞·ªõc khi ƒëi ng·ªß, b·∫°n th∆∞·ªùng:", o:[
    "A. T·∫Øt ƒëi·ªán tho·∫°i s·ªõm",
    "B. Ch·ªâ l∆∞·ªõt m·∫°ng m·ªôt ch√∫t r·ªìi ng·ªß",
    "C. C·ª© l∆∞·ªõt m·∫°ng ƒë·∫øn khi m·ªát m·ªõi ng·ªß",
    "D. Th∆∞·ªùng th·ª©c khuya v√¨ s·ª£ b·ªè l·ª° tin t·ª©c"
  ]},
  { q: "4. Khi th·∫•y b·∫°n b√® ƒëƒÉng ·∫£nh ƒëi ch∆°i m√† kh√¥ng c√≥ b·∫°n, c·∫£m gi√°c th∆∞·ªùng ƒë·∫øn ƒë·∫ßu ti√™n l√†:", o:[
    "A. B√¨nh th∆∞·ªùng",
    "B. Th·∫•y ti·∫øc nh·∫π",
    "C. Th·∫•y bu·ªìn v√† ghen t·ªã",
    "D. C·∫£m gi√°c h·ª•t h·∫´ng, lo l·∫Øng b·ªã b·ªè r∆°i"
  ]},
  { q: "5. Khi nh√≥m chat ƒëang b√†n s√¥i n·ªïi v·ªÅ m·ªôt s·ª± ki·ªán b·∫°n ch∆∞a nghe ƒë·∫øn, b·∫°n s·∫Ω:", o:[
    "A. Kh√¥ng quan t√¢m",
    "B. ƒê·ªçc l∆∞·ªõt cho bi·∫øt",
    "C. L·∫≠p t·ª©c h·ªèi chi ti·∫øt ƒë·ªÉ tham gia",
    "D. Lo l·∫Øng v√¨ s·ª£ m√¨nh l√† ng∆∞·ªùi duy nh·∫•t b·ªè l·ª°"
  ]},
  { q: "6. B·∫°n c√≥ bao gi·ªù tham gia m·ªôt ho·∫°t ƒë·ªông m√† b·∫£n th√¢n kh√¥ng th√≠ch, ch·ªâ v√¨ s·ª£ l·∫°c l√µng?", o:[
    "A. Ch∆∞a bao gi·ªù",
    "B. √çt khi",
    "C. Kh√° th∆∞·ªùng xuy√™n",
    "D. H·∫ßu nh∆∞ lu√¥n nh∆∞ v·∫≠y"
  ]},
  { q: "7. Khi th·∫•y ng∆∞·ªùi kh√°c ƒë·∫°t th√†nh t√≠ch n·ªïi b·∫≠t (h·ªçc t·∫≠p, s·ª± nghi·ªáp‚Ä¶), b·∫°n th∆∞·ªùng:", o:[
    "A. Ch·ªâ vui cho h·ªç",
    "B. C√≥ ch√∫t so s√°nh nh∆∞ng kh√¥ng l√¢u",
    "C. So s√°nh v√† c·∫£m th·∫•y t·ª± ti",
    "D. Lu√¥n nghƒ© m√¨nh ƒëang t·ª•t l·∫°i ph√≠a sau"
  ]},
  { q: "8. B·∫°n c√≥ bao gi·ªù c·∫£m th·∫•y b·ªìn ch·ªìn n·∫øu ƒëi·ªán tho·∫°i kh√¥ng c√≥ k·∫øt n·ªëi m·∫°ng?", o:[
    "A. Kh√¥ng",
    "B. Th·ªânh tho·∫£ng",
    "C. Th∆∞·ªùng xuy√™n",
    "D. Lu√¥n lu√¥n"
  ]},
  { q: "9. N·∫øu m·ªôt ng√†y b·∫°n kh√¥ng v√†o m·∫°ng x√£ h·ªôi, b·∫°n s·∫Ω:", o:[
    "A. B√¨nh th∆∞·ªùng",
    "B. H∆°i thi·∫øu nh∆∞ng ch·∫•p nh·∫≠n ƒë∆∞·ª£c",
    "C. C·∫£m th·∫•y b·∫•t an",
    "D. R·∫•t lo l·∫Øng, s·ª£ b·ªè l·ª° nhi·ªÅu th·ª©"
  ]},
  { q: "10. Khi b·∫°n kh√¥ng ƒë∆∞·ª£c g·∫Øn th·∫ª trong ·∫£nh ch·ª•p chung, b·∫°n th∆∞·ªùng:", o:[
    "A. Kh√¥ng ƒë·ªÉ √Ω",
    "B. H∆°i ti·∫øc m·ªôt ch√∫t",
    "C. Th·∫Øc m·∫Øc t·∫°i sao",
    "D. Bu·ªìn b·ª±c, nghƒ© r·∫±ng m√¨nh b·ªã c·ªë √Ω b·ªè qu√™n"
  ]},
  { q: "11. Trong l√∫c h·ªçc/b·∫≠n vi·ªác, b·∫°n c√≥ th∆∞·ªùng b·ªã th√¥i th√∫c m·ªü ƒëi·ªán tho·∫°i ki·ªÉm tra tin t·ª©c?", o:[
    "A. Kh√¥ng bao gi·ªù",
    "B. ƒê√¥i khi",
    "C. Kh√° th∆∞·ªùng xuy√™n",
    "D. Li√™n t·ª•c, kh√≥ ki·ªÅm ch·∫ø"
  ]},
  { q: "12. Khi c√≥ m·ªôt xu h∆∞·ªõng m·ªõi tr√™n TikTok/Facebook, b·∫°n th∆∞·ªùng:", o:[
    "A. Kh√¥ng quan t√¢m",
    "B. Xem cho bi·∫øt",
    "C. Th·ª≠ l√†m theo ƒë·ªÉ h√≤a nh·∫≠p",
    "D. C·∫£m th·∫•y b·∫Øt bu·ªôc ph·∫£i tham gia ƒë·ªÉ kh√¥ng b·ªã t·ª•t h·∫≠u"
  ]},
  { q: "13. B·∫°n c√≥ t·ª´ng ƒëƒÉng b√†i/·∫£nh ch·ªâ ƒë·ªÉ ch·ª©ng minh r·∫±ng m√¨nh c≈©ng ƒëang vui v·∫ª nh∆∞ ng∆∞·ªùi kh√°c?", o:[
    "A. Ch∆∞a bao gi·ªù",
    "B. Th·ªânh tho·∫£ng",
    "C. Kh√° th∆∞·ªùng xuy√™n",
    "D. G·∫ßn nh∆∞ lu√¥n v·∫≠y"
  ]},
  { q: "14. Khi kh√¥ng nh·∫≠n ƒë∆∞·ª£c l∆∞·ª£t like ho·∫∑c comment mong ƒë·ª£i, b·∫°n th∆∞·ªùng:", o:[
    "A. Kh√¥ng quan t√¢m",
    "B. C√≥ ch√∫t ti·∫øc",
    "C. Th·∫•y bu·ªìn, th·∫•t v·ªçng",
    "D. Nghƒ© r·∫±ng m√¨nh kh√¥ng ƒë∆∞·ª£c coi tr·ªçng"
  ]},
  { q: "15. N·∫øu b·ªè l·ª° m·ªôt bu·ªïi h·ªçc th√™m/ho·∫°t ƒë·ªông ngo·∫°i kh√≥a, b·∫°n th∆∞·ªùng nghƒ©:", o:[
    "A. Kh√¥ng v·∫•n ƒë·ªÅ g√¨",
    "B. H∆°i lo l·∫Øng m·ªôt ch√∫t",
    "C. S·ª£ m√¨nh s·∫Ω thua k√©m b·∫°n b√®",
    "D. R·∫•t cƒÉng th·∫≥ng, √°m ·∫£nh chuy·ªán b·ªè l·ª°"
  ]},
  { q: "16. Khi b·∫°n b√® l·∫≠p nh√≥m ri√™ng m√† kh√¥ng m·ªùi m√¨nh, b·∫°n th∆∞·ªùng:", o:[
    "A. Kh√¥ng quan t√¢m",
    "B. Nghƒ© r·∫±ng ch·∫Øc h·ªç c√≥ l√Ω do",
    "C. C·∫£m th·∫•y b·ªã lo·∫°i tr·ª´",
    "D. R·∫•t bu·ªìn, kh√≥ ch·ªãu, lo l·∫Øng m·∫•t b·∫°n"
  ]},
  { q: "17. B·∫°n th∆∞·ªùng ki·ªÉm tra th√¥ng b√°o tr√™n ƒëi·ªán tho·∫°i khi n√†o?", o:[
    "A. L√¢u l√¢u m·ªõi xem",
    "B. Khi r·∫£nh",
    "C. G·∫ßn nh∆∞ m·ªói gi·ªù",
    "D. Li√™n t·ª•c, k·ªÉ c·∫£ l√∫c ƒëang l√†m vi·ªác kh√°c"
  ]},
  { q: "18. Khi th·∫•y ng∆∞·ªùi kh√°c ƒëi du l·ªãch, b·∫°n th∆∞·ªùng:", o:[
    "A. Ch·ªâ ng·∫Øm cho vui",
    "B. Th·∫•y th√≠ch nh∆∞ng kh√¥ng b·∫≠n t√¢m nhi·ªÅu",
    "C. ∆Ø·ªõc m√¨nh c≈©ng ƒë∆∞·ª£c ƒëi",
    "D. C·∫£m gi√°c h·ª•t h·∫´ng, ti·∫øc nu·ªëi, so s√°nh b·∫£n th√¢n"
  ]},
  { q: "19. B·∫°n c√≥ t·ª´ng ƒë·ªìng √Ω tham gia m·ªôt nh√≥m chat ch·ªâ ƒë·ªÉ kh√¥ng b·ªè l·ª° th√¥ng tin, d√π kh√¥ng th√≠ch nh√≥m ƒë√≥?", o:[
    "A. Kh√¥ng bao gi·ªù",
    "B. Th·ªânh tho·∫£ng",
    "C. Kh√° th∆∞·ªùng xuy√™n",
    "D. Lu√¥n nh∆∞ v·∫≠y"
  ]},
  { q: "20. Trong m·ªôt ng√†y, b·∫°n d√†nh bao nhi√™u th·ªùi gian cho m·∫°ng x√£ h·ªôi?", o:[
    "A. D∆∞·ªõi 1 gi·ªù",
    "B. 1‚Äì2 gi·ªù",
    "C. 3‚Äì4 gi·ªù",
    "D. Tr√™n 5 gi·ªù"
  ]},
  { q: "21. Khi kh√¥ng k·ªãp tham gia m·ªôt th·ª≠ th√°ch online n·ªïi ti·∫øng, b·∫°n c·∫£m th·∫•y:", o:[
    "A. B√¨nh th∆∞·ªùng",
    "B. H∆°i ti·∫øc",
    "C. T·ª± tr√°ch m√¨nh",
    "D. Lo l·∫Øng b·ªã t·ª•t l·∫°i ph√≠a sau"
  ]},
  { q: "22. N·∫øu b·∫°n b√® kh√¥ng tr·∫£ l·ªùi tin nh·∫Øn ngay, b·∫°n th∆∞·ªùng:", o:[
    "A. Ki√™n nh·∫´n ch·ªù",
    "B. C√≥ ch√∫t s·ªët ru·ªôt",
    "C. Nghƒ© r·∫±ng m√¨nh b·ªã l·ªù ƒëi",
    "D. R·∫•t lo l·∫Øng, li√™n t·ª•c ki·ªÉm tra"
  ]},
  { q: "23. Khi th·∫•y th√¥ng tin n√≥ng h·ªïi m√† m√¨nh ch∆∞a bi·∫øt, b·∫°n th∆∞·ªùng:", o:[
    "A. Kh√¥ng quan t√¢m",
    "B. T√¨m hi·ªÉu khi r·∫£nh",
    "C. T√¨m ngay l·∫≠p t·ª©c",
    "D. Lo s·ª£ m√¨nh l√† ng∆∞·ªùi cu·ªëi c√πng bi·∫øt"
  ]},
  { q: "24. B·∫°n c√≥ hay m·ªü ƒëi·ªán tho·∫°i ngay khi v·ª´a th·ª©c d·∫≠y ƒë·ªÉ ki·ªÉm tra tin t·ª©c kh√¥ng?", o:[
    "A. Kh√¥ng bao gi·ªù",
    "B. Th·ªânh tho·∫£ng",
    "C. Kh√° th∆∞·ªùng xuy√™n",
    "D. H·∫ßu nh∆∞ ng√†y n√†o c≈©ng v·∫≠y"
  ]},
  { q: "25. Khi ph·∫£i l·ª±a ch·ªçn gi·ªØa ngh·ªâ ng∆°i v√† tham gia m·ªôt bu·ªïi ƒëi ch∆°i, b·∫°n th∆∞·ªùng:", o:[
    "A. Ch·ªçn ngh·ªâ ng∆°i",
    "B. T√πy t√¢m tr·∫°ng",
    "C. D√π m·ªát v·∫´n c·ªë ƒëi",
    "D. Lu√¥n ch·ªçn ƒëi v√¨ s·ª£ b·ªã b·ªè l·ª°"
  ]},
  { q: "26. B·∫°n c√≥ hay c·∫£m th·∫•y cu·ªôc s·ªëng c·ªßa m√¨nh k√©m th√∫ v·ªã h∆°n khi nh√¨n m·∫°ng x√£ h·ªôi c·ªßa ng∆∞·ªùi kh√°c?", o:[
    "A. Kh√¥ng bao gi·ªù",
    "B. Th·ªânh tho·∫£ng",
    "C. Kh√° th∆∞·ªùng xuy√™n",
    "D. Lu√¥n c·∫£m th·∫•y v·∫≠y"
  ]},
  { q: "27. Khi m·ªôt ng∆∞·ªùi b·∫°n ƒëƒÉng ·∫£nh v·ªõi nh√≥m kh√°c m√† kh√¥ng c√≥ b·∫°n, b·∫°n th∆∞·ªùng:", o:[
    "A. Vui cho h·ªç",
    "B. Th·∫•y h∆°i ch·∫°nh l√≤ng",
    "C. Nghƒ© r·∫±ng m√¨nh kh√¥ng c√≤n quan tr·ªçng",
    "D. R·∫•t bu·ªìn, kh√≥ ng·ªß v√¨ suy nghƒ©"
  ]},
  { q: "28. B·∫°n c√≥ t·ª´ng d√πng m·∫°ng x√£ h·ªôi ngay c·∫£ khi ƒëang tham gia ho·∫°t ƒë·ªông ngo√†i ƒë·ªùi (ƒÉn u·ªëng, xem phim)?", o:[
    "A. Kh√¥ng",
    "B. Hi·∫øm khi",
    "C. Kh√° th∆∞·ªùng xuy√™n",
    "D. Lu√¥n nh∆∞ v·∫≠y"
  ]},
  { q: "29. B·∫°n c√≥ th∆∞·ªùng ƒëƒÉng b√†i v·ªõi k·ª≥ v·ªçng nh·∫≠n ƒë∆∞·ª£c nhi·ªÅu l∆∞·ª£t like?", o:[
    "A. Kh√¥ng bao gi·ªù",
    "B. ƒê√¥i l√∫c c√≥",
    "C. Th∆∞·ªùng xuy√™n",
    "D. Lu√¥n mong ƒë·ª£i ƒëi·ªÅu ƒë√≥"
  ]},
  { q: "30. B·∫°n c√≥ th∆∞·ªùng xuy√™n m·ªü ƒëi·ªán tho·∫°i m√† kh√¥ng c√≥ l√≠ do r√µ r√†ng?", o:[
    "A. R·∫•t hi·∫øm",
    "B. ƒê√¥i khi",
    "C. Kh√° th∆∞·ªùng xuy√™n",
    "D. G·∫ßn nh∆∞ lu√¥n l√†m v·∫≠y"
  ]}
];

/* Render questions */
const questionsContainer = document.getElementById('questions-container');
quizQuestions.forEach((item, idx) => {
  const div = document.createElement('div');
  div.className = 'question';
  div.innerHTML = `<p>${item.q}</p>`;
  const optionsHtml = item.o.map((opt, i) => {
    return `<label><input type="radio" name="q${idx}" value="${i+1}"> ${opt}</label>`;
  }).join('');
  div.innerHTML += `<div class="options">${optionsHtml}</div>`;
  questionsContainer.appendChild(div);
});

/* Submit logic: check unanswered, compute score, show level + advice */
const submitBtn = document.getElementById('submitBtn');
const clearBtn = document.getElementById('clearBtn');
const resultArea = document.getElementById('result-area');

submitBtn.addEventListener('click', ()=>{
  // not dupicated
  if (resultArea.style.display == 'block') return;
  // collect answers
  const unanswered = [];
  let total = 0;
  for(let i=0;i<quizQuestions.length;i++){
    const sel = document.querySelector(`input[name="q${i}"]:checked`);
    if(!sel) unanswered.push(i+1);
    else total += parseInt(sel.value,10);
  }

  if(unanswered.length){
    alert("B·∫°n ch∆∞a tr·∫£ l·ªùi h·∫øt c√¢u h·ªèi. Vui l√≤ng tr·∫£ l·ªùi c√°c c√¢u: " + unanswered.join(", "));
    // scroll to first unanswered question:
    const first = document.querySelector(`input[name="q${unanswered[0]-1}"]`);
    if(first){
      first.scrollIntoView({behavior:'smooth', block:'center'});
    }
    return;
  }

  // Classification thresholds (total min 30, max 120)
  // We'll use: 30-50 low, 51-85 medium, 86-120 high
  let levelText = "";
  let advice = "";
  let level = 0;
  if(total <= 50){
    levelText = "M·ª©c ƒë·ªô FOMO: Th·∫•p";
    level = 0;
    advice = "B·∫°n ki·ªÉm so√°t t·ªët xu h∆∞·ªõng FOMO. Ti·∫øp t·ª•c duy tr√¨ th√≥i quen l√†nh m·∫°nh: c√¢n b·∫±ng th·ªùi gian online v√† offline, v√† gi·ªØ m·ªëi quan h·ªá tr·ª±c ti·∫øp v·ªõi b·∫°n b√®.";
  } else if(total <= 85){
    levelText = "M·ª©c ƒë·ªô FOMO: Trung b√¨nh";
    level = 1;
    advice = "B·∫°n c√≥ d·∫•u hi·ªáu FOMO. H√£y th·ª≠ gi·∫£m th·ªùi gian l∆∞·ªõt m·∫°ng, ƒë·∫∑t gi·ªõi h·∫°n th√¥ng b√°o, v√† d√†nh th·ªùi gian cho ho·∫°t ƒë·ªông ngo·∫°i kh√≥a, giao ti·∫øp tr·ª±c ti·∫øp.";
  } else {
    levelText = "M·ª©c ƒë·ªô FOMO: Cao";
    level = 2;
    advice = "FOMO ƒëang kh√° ·∫£nh h∆∞·ªüng. N√™n t√¨m s·ª± h·ªó tr·ª£: tr√≤ chuy·ªán v·ªõi gia ƒë√¨nh ho·∫∑c th·∫ßy c√¥, th·ª≠ c√°c k·ªπ thu·∫≠t qu·∫£n l√Ω th·ªùi gian v√† c√¢n nh·∫Øc t∆∞ v·∫•n t√¢m l√Ω n·∫øu c·∫ßn.";
  }

  // Short tips (3 bullets) based on level
  let tips = [];
  if(total <= 50){
    tips = [
      "Gi·ªØ th√≥i quen c√¢n b·∫±ng: ti·∫øp t·ª•c h·∫°n ch·∫ø th√¥ng b√°o kh√¥ng c·∫ßn thi·∫øt.",
      "Duy tr√¨ ho·∫°t ƒë·ªông ngo√†i ƒë·ªùi v√† t∆∞∆°ng t√°c tr·ª±c ti·∫øp.",
      "Theo d√µi c·∫£m x√∫c, ngh·ªâ ng∆°i ƒë√∫ng gi·ªù."
    ];
  } else if(total <= 85){
    tips = [
      "ƒê·∫∑t th·ªùi gian c·ªë ƒë·ªãnh cho m·∫°ng x√£ h·ªôi (v√≠ d·ª•: 30‚Äì60 ph√∫t/ng√†y).",
      "T·∫≠p th√≥i quen t·∫Øt th√¥ng b√°o v√†o gi·ªù h·ªçc/ng·ªß.",
      "Tham gia √≠t nh·∫•t 1 ho·∫°t ƒë·ªông ngo·∫°i kh√≥a/tu·∫ßn."
    ];
  } else {
    tips = [
      "N√≥i chuy·ªán v·ªõi ng∆∞·ªùi th√¢n ho·∫∑c gi√°o vi√™n b·∫°n tin t∆∞·ªüng.",
      "Th·ª≠ k·ªπ thu·∫≠t 'digital detox' (√≠t nh·∫•t 1 ng√†y/tu·∫ßn kh√¥ng d√πng m·∫°ng x√£ h·ªôi).",
      "C√¢n nh·∫Øc t√¨m h·ªó tr·ª£ chuy√™n gia t√¢m l√Ω n·∫øu c·∫£m x√∫c ·∫£nh h∆∞·ªüng l·ªõn."
    ];
  }

  // Show results
  resultArea.style.display = 'block';
  resultArea.innerHTML = `
    <h4>K·∫øt qu·∫£ kh·∫£o s√°t</h4>
    <p><strong>T·ªïng ƒëi·ªÉm:</strong> ${total} / 120</p>
    <p><strong>${levelText}</strong></p>
    <p><em>${advice}</em></p>
    <div style="margin-top:10px">
      <strong>L·ªùi khuy√™n ng·∫Øn:</strong>
      <ul>
        ${tips.map(t => `<li>${t}</li>`).join('')}
      </ul>
    </div>
  `;

  // Scroll to result
  resultArea.scrollIntoView({behavior:'smooth', block:'center'});
  // D√≤ng d∆∞·ªõi ƒë√¢y nh·∫≠n s·ªë l∆∞·ª£ng ng∆∞·ªùi kh·∫£o s√°t
  // Get number of doers
  counter.up(key_submit_click[level]).then(result => {
    if (level == 0) window.doers_low = result;
    if (level == 1) window.doers_medium = result;
    if (level == 2) window.doers_high = result;
    updateDoerUI();
  }).catch(err => console.error('Counter error (doers):', err))
});

/* Clear - reset form */
clearBtn.addEventListener('click', ()=>{
  const inputs = document.querySelectorAll('#quiz-form input[type="radio"]');
  inputs.forEach(i => i.checked = false);
  resultArea.style.display = 'none';
});

/* Accessibility: allow Enter key to submit when focus in quiz form */
document.getElementById('quiz-form').addEventListener('keydown', (e)=>{
  if(e.key === 'Enter'){
    e.preventDefault();
    submitBtn.click();
  }
});
